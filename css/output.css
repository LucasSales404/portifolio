/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-red-800: oklch(44.4% 0.177 26.899);
    --color-slate-700: oklch(37.2% 0.044 257.287);
    --color-slate-800: oklch(27.9% 0.041 260.031);
    --color-slate-900: oklch(20.8% 0.042 265.755);
    --color-slate-950: oklch(12.9% 0.042 264.695);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --font-weight-medium: 500;
    --radius-sm: 0.25rem;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .left-1 {
    left: calc(var(--spacing) * 1);
  }
  .left-1\/2 {
    left: calc(1/2 * 100%);
  }
  .flex {
    display: flex;
  }
  .hidden {
    display: none;
  }
  .table {
    display: table;
  }
  .h-\[0px\] {
    height: 0px;
  }
  .h-\[00px\] {
    height: 00px;
  }
  .h-\[2px\] {
    height: 2px;
  }
  .h-\[3\] {
    height: 3;
  }
  .h-\[5\] {
    height: 5;
  }
  .h-\[30\] {
    height: 30;
  }
  .h-\[30p\] {
    height: 30p;
  }
  .h-\[30px\] {
    height: 30px;
  }
  .h-\[32px\] {
    height: 32px;
  }
  .h-\[35px\] {
    height: 35px;
  }
  .h-\[40px\] {
    height: 40px;
  }
  .h-\[45px\] {
    height: 45px;
  }
  .h-\[50\] {
    height: 50;
  }
  .h-\[70px\] {
    height: 70px;
  }
  .h-\[80px\] {
    height: 80px;
  }
  .h-\[150px\] {
    height: 150px;
  }
  .h-\[300px\] {
    height: 300px;
  }
  .h-\[400px\] {
    height: 400px;
  }
  .h-\[450px\] {
    height: 450px;
  }
  .h-\[470px\] {
    height: 470px;
  }
  .h-\[500\] {
    height: 500;
  }
  .h-\[500p\] {
    height: 500p;
  }
  .h-\[500px\] {
    height: 500px;
  }
  .h-\[700px\] {
    height: 700px;
  }
  .h-\[800px\] {
    height: 800px;
  }
  .h-full {
    height: 100%;
  }
  .max-h-\[30px\] {
    max-height: 30px;
  }
  .w-0 {
    width: calc(var(--spacing) * 0);
  }
  .w-\[20px\] {
    width: 20px;
  }
  .w-\[30\%\] {
    width: 30%;
  }
  .w-\[30px\] {
    width: 30px;
  }
  .w-\[35px\] {
    width: 35px;
  }
  .w-\[40px\] {
    width: 40px;
  }
  .w-\[45\%\] {
    width: 45%;
  }
  .w-\[65\%\] {
    width: 65%;
  }
  .w-\[150px\] {
    width: 150px;
  }
  .w-\[300px\] {
    width: 300px;
  }
  .w-\[350px\] {
    width: 350px;
  }
  .w-\[380px\] {
    width: 380px;
  }
  .w-\[450px\] {
    width: 450px;
  }
  .w-\[500px\] {
    width: 500px;
  }
  .w-\[550px\] {
    width: 550px;
  }
  .w-\[600px\] {
    width: 600px;
  }
  .w-full {
    width: 100%;
  }
  .max-w-\[30px\] {
    max-width: 30px;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .origin-center {
    transform-origin: center;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-10 {
    gap: calc(var(--spacing) * 10);
  }
  .gap-20 {
    gap: calc(var(--spacing) * 20);
  }
  .gap-\[5px\] {
    gap: 5px;
  }
  .gap-\[7px\] {
    gap: 7px;
  }
  .gap-\[10px\] {
    gap: 10px;
  }
  .rounded-\[2px\] {
    border-radius: 2px;
  }
  .rounded-\[3px\] {
    border-radius: 3px;
  }
  .rounded-\[5px\] {
    border-radius: 5px;
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-\[2px\] {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-white {
    border-color: var(--color-white);
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-red-500 {
    background-color: var(--color-red-500);
  }
  .bg-red-600 {
    background-color: var(--color-red-600);
  }
  .bg-slate-900 {
    background-color: var(--color-slate-900);
  }
  .bg-slate-950 {
    background-color: var(--color-slate-950);
  }
  .object-contain {
    object-fit: contain;
  }
  .p-5 {
    padding: calc(var(--spacing) * 5);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .p-28 {
    padding: calc(var(--spacing) * 28);
  }
  .p-\[4px\] {
    padding: 4px;
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-24 {
    padding-inline: calc(var(--spacing) * 24);
  }
  .px-26 {
    padding-inline: calc(var(--spacing) * 26);
  }
  .px-28 {
    padding-inline: calc(var(--spacing) * 28);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .py-14 {
    padding-block: calc(var(--spacing) * 14);
  }
  .py-16 {
    padding-block: calc(var(--spacing) * 16);
  }
  .py-\[85px\] {
    padding-block: 85px;
  }
  .pt-5 {
    padding-top: calc(var(--spacing) * 5);
  }
  .pt-10 {
    padding-top: calc(var(--spacing) * 10);
  }
  .pt-40 {
    padding-top: calc(var(--spacing) * 40);
  }
  .pr-4 {
    padding-right: calc(var(--spacing) * 4);
  }
  .pb-10 {
    padding-bottom: calc(var(--spacing) * 10);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-6xl {
    font-size: var(--text-6xl);
    line-height: var(--tw-leading, var(--text-6xl--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-\[14px\] {
    font-size: 14px;
  }
  .text-\[15px\] {
    font-size: 15px;
  }
  .text-\[18px\] {
    font-size: 18px;
  }
  .text-\[22px\] {
    font-size: 22px;
  }
  .text-\[40px\] {
    font-size: 40px;
  }
  .text-\[55px\] {
    font-size: 55px;
  }
  .font-\[600\] {
    --tw-font-weight: 600;
    font-weight: 600;
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .text-red-600 {
    color: var(--color-red-600);
  }
  .text-white {
    color: var(--color-white);
  }
  .underline {
    text-decoration-line: underline;
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .drop-shadow-\[0_0_15px_rgba\(220\,38\,38\,0\.7\)\] {
    --tw-drop-shadow-size: drop-shadow(0 0 15px var(--tw-drop-shadow-color, rgba(220,38,38,0.7)));
    --tw-drop-shadow: var(--tw-drop-shadow-size);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-shadow {
    transition-property: box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-1 {
    --tw-duration: 1ms;
    transition-duration: 1ms;
  }
  .duration-7 {
    --tw-duration: 7ms;
    transition-duration: 7ms;
  }
  .duration-10 {
    --tw-duration: 10ms;
    transition-duration: 10ms;
  }
  .duration-20 {
    --tw-duration: 20ms;
    transition-duration: 20ms;
  }
  .duration-70 {
    --tw-duration: 70ms;
    transition-duration: 70ms;
  }
  .duration-100 {
    --tw-duration: 100ms;
    transition-duration: 100ms;
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-700 {
    --tw-duration: 700ms;
    transition-duration: 700ms;
  }
  .duration-initial {
    --tw-duration: initial;
  }
  .group-hover\:left-0 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        left: calc(var(--spacing) * 0);
      }
    }
  }
  .group-hover\:w-full {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        width: 100%;
      }
    }
  }
  .hover\:w-\[40px\] {
    &:hover {
      @media (hover: hover) {
        width: 40px;
      }
    }
  }
  .hover\:scale-0 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 0%;
        --tw-scale-y: 0%;
        --tw-scale-z: 0%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-1 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 1%;
        --tw-scale-y: 1%;
        --tw-scale-z: 1%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-2 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 2%;
        --tw-scale-y: 2%;
        --tw-scale-z: 2%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-x-1 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 1%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-x-2 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 2%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-x-15 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 15%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-x-150 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 150%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-x-\[1\.1\] {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 1.1;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-x-\[1\.\] {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 1.;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-x-\[1\] {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 1;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-x-\[w-3\] {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: w-3;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-x-\[w-4\] {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: w-4;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-x-\[w-40\] {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: w-40;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-x-\[w-40px\] {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: w-40px;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-x-\[w-\] {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: w-;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-x-\[w\] {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: w;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-\[1\.1\] {
    &:hover {
      @media (hover: hover) {
        scale: 1.1;
      }
    }
  }
  .hover\:scale-\[1\.2\] {
    &:hover {
      @media (hover: hover) {
        scale: 1.2;
      }
    }
  }
  .hover\:scale-\[1\.05\] {
    &:hover {
      @media (hover: hover) {
        scale: 1.05;
      }
    }
  }
  .hover\:scale-\[1\.\] {
    &:hover {
      @media (hover: hover) {
        scale: 1.;
      }
    }
  }
  .hover\:scale-\[1\] {
    &:hover {
      @media (hover: hover) {
        scale: 1;
      }
    }
  }
  .hover\:transform {
    &:hover {
      @media (hover: hover) {
        transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
      }
    }
  }
  .hover\:transform-\[sc\] {
    &:hover {
      @media (hover: hover) {
        transform: sc;
      }
    }
  }
  .hover\:transform-\[sca\] {
    &:hover {
      @media (hover: hover) {
        transform: sca;
      }
    }
  }
  .hover\:transform-\[scale-\] {
    &:hover {
      @media (hover: hover) {
        transform: scale-;
      }
    }
  }
  .hover\:transform-\[scale-x-5\] {
    &:hover {
      @media (hover: hover) {
        transform: scale-x-5;
      }
    }
  }
  .hover\:transform-\[scale-x-\[5\]\] {
    &:hover {
      @media (hover: hover) {
        transform: scale-x-[5];
      }
    }
  }
  .hover\:transform-\[scale-x-\[5px\]\] {
    &:hover {
      @media (hover: hover) {
        transform: scale-x-[5px];
      }
    }
  }
  .hover\:transform-\[scale-x-\[\]\] {
    &:hover {
      @media (hover: hover) {
        transform: scale-x-[];
      }
    }
  }
  .hover\:transform-\[scale-x-\] {
    &:hover {
      @media (hover: hover) {
        transform: scale-x-;
      }
    }
  }
  .hover\:transform-\[scale-x\] {
    &:hover {
      @media (hover: hover) {
        transform: scale-x;
      }
    }
  }
  .hover\:transform-\[scale\] {
    &:hover {
      @media (hover: hover) {
        transform: scale;
      }
    }
  }
  .hover\:border {
    &:hover {
      @media (hover: hover) {
        border-style: var(--tw-border-style);
        border-width: 1px;
      }
    }
  }
  .hover\:border-\[2px\] {
    &:hover {
      @media (hover: hover) {
        border-style: var(--tw-border-style);
        border-width: 2px;
      }
    }
  }
  .hover\:border-b {
    &:hover {
      @media (hover: hover) {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
      }
    }
  }
  .hover\:border-red-600 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-red-600);
      }
    }
  }
  .hover\:bg-red-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-600);
      }
    }
  }
  .hover\:bg-red-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-800);
      }
    }
  }
  .hover\:bg-slate-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-700);
      }
    }
  }
  .hover\:bg-slate-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-800);
      }
    }
  }
  .hover\:shadow {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:shadow-\[0_0_15px_5px_rgba\(220\,38\,38\,0\.7\)\] {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 0 15px 5px var(--tw-shadow-color, rgba(220,38,38,0.7));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:drop-shadow-\[0_0_1px_rgba\(220\,38\,38\,0\.7\)\] {
    &:hover {
      @media (hover: hover) {
        --tw-drop-shadow-size: drop-shadow(0 0 1px var(--tw-drop-shadow-color, rgba(220,38,38,0.7)));
        --tw-drop-shadow: var(--tw-drop-shadow-size);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .hover\:drop-shadow-\[0_0_2px_rgba\(220\,38\,38\,0\.7\)\] {
    &:hover {
      @media (hover: hover) {
        --tw-drop-shadow-size: drop-shadow(0 0 2px var(--tw-drop-shadow-color, rgba(220,38,38,0.7)));
        --tw-drop-shadow: var(--tw-drop-shadow-size);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .hover\:drop-shadow-\[0_0_5px_rgba\(220\,38\,38\,0\.7\)\] {
    &:hover {
      @media (hover: hover) {
        --tw-drop-shadow-size: drop-shadow(0 0 5px var(--tw-drop-shadow-color, rgba(220,38,38,0.7)));
        --tw-drop-shadow: var(--tw-drop-shadow-size);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .hover\:drop-shadow-\[0_0_8px_rgba\(220\,38\,38\,0\.7\)\] {
    &:hover {
      @media (hover: hover) {
        --tw-drop-shadow-size: drop-shadow(0 0 8px var(--tw-drop-shadow-color, rgba(220,38,38,0.7)));
        --tw-drop-shadow: var(--tw-drop-shadow-size);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .hover\:drop-shadow-\[0_0_15px_rgba\(220\,38\,38\,0\.7\)\] {
    &:hover {
      @media (hover: hover) {
        --tw-drop-shadow-size: drop-shadow(0 0 15px var(--tw-drop-shadow-color, rgba(220,38,38,0.7)));
        --tw-drop-shadow: var(--tw-drop-shadow-size);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .hover\:drop-shadow-\[0_0_80px_rgba\(220\,38\,38\,0\.7\)\] {
    &:hover {
      @media (hover: hover) {
        --tw-drop-shadow-size: drop-shadow(0 0 80px var(--tw-drop-shadow-color, rgba(220,38,38,0.7)));
        --tw-drop-shadow: var(--tw-drop-shadow-size);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .hover\:drop-shadow-\[0_0_px_rgba\(220\,38\,38\,0\.7\)\] {
    &:hover {
      @media (hover: hover) {
        --tw-drop-shadow-size: drop-shadow(0 0 var(--tw-drop-shadow-color, px) rgba(220,38,38,0.7));
        --tw-drop-shadow: var(--tw-drop-shadow-size);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .hover\:filter {
    &:hover {
      @media (hover: hover) {
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .hover\:filter-\[b\] {
    &:hover {
      @media (hover: hover) {
        filter: b;
      }
    }
  }
  .hover\:filter-\[bo\] {
    &:hover {
      @media (hover: hover) {
        filter: bo;
      }
    }
  }
  .hover\:filter-\[box-s\] {
    &:hover {
      @media (hover: hover) {
        filter: box-s;
      }
    }
  }
  .hover\:filter-\[box-sj\] {
    &:hover {
      @media (hover: hover) {
        filter: box-sj;
      }
    }
  }
  .hover\:filter-\[box-sja\] {
    &:hover {
      @media (hover: hover) {
        filter: box-sja;
      }
    }
  }
  .hover\:filter-\[box\] {
    &:hover {
      @media (hover: hover) {
        filter: box;
      }
    }
  }
  .hover\:filter-\[boxs\] {
    &:hover {
      @media (hover: hover) {
        filter: boxs;
      }
    }
  }
  .hover\:filter-\[dr\] {
    &:hover {
      @media (hover: hover) {
        filter: dr;
      }
    }
  }
  .hover\:filter-\[drop-s\] {
    &:hover {
      @media (hover: hover) {
        filter: drop-s;
      }
    }
  }
  .hover\:filter-\[drop-sh\] {
    &:hover {
      @media (hover: hover) {
        filter: drop-sh;
      }
    }
  }
  .hover\:filter-\[drop-sha\] {
    &:hover {
      @media (hover: hover) {
        filter: drop-sha;
      }
    }
  }
  .hover\:filter-\[drop-shad\] {
    &:hover {
      @media (hover: hover) {
        filter: drop-shad;
      }
    }
  }
  .hover\:filter-\[drop-shadd\] {
    &:hover {
      @media (hover: hover) {
        filter: drop-shadd;
      }
    }
  }
  .hover\:filter-\[drop-shaddow\] {
    &:hover {
      @media (hover: hover) {
        filter: drop-shaddow;
      }
    }
  }
  .hover\:filter-\[drop-sj\] {
    &:hover {
      @media (hover: hover) {
        filter: drop-sj;
      }
    }
  }
  .hover\:filter-\[drop\] {
    &:hover {
      @media (hover: hover) {
        filter: drop;
      }
    }
  }
}
* {
  font-family: "Inter", sans-serif;
}
.fonte-nome {
  font-family: "Kaushan Script", cursive;
  font-weight: 400;
  font-style: normal;
}
.alfa-slab-one-regular {
  font-family: "Alfa Slab One", serif;
  font-weight: 400;
  font-style: normal;
}
.tecnologias {
  display: grid;
  grid-auto-flow: column;
  grid-template-rows: repeat(4, auto);
  gap: 1rem;
}
input {
  background-color: rgb(34, 34, 34);
  padding-left: 25px;
  width: 450px;
  height: 50px;
  border-radius: 3px;
}
textarea {
  background-color: rgb(34, 34, 34);
  border-radius: 3px;
}
label {
  font-weight: 500;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-duration: initial;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
    }
  }
}
